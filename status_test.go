package goprowifi

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestClient_GetCameraStatus(t *testing.T) {
	type fields struct {
		myDoer Doer
	}
	tests := []struct {
		name           string
		fields         fields
		wantStatus     CurrentStatus
		wantHTTPStatus int
		wantErr        error
	}{
		{
			name: "Hero5 OK",
			fields: fields{
				myDoer: testDoer{
					responseCode: 200,
					response: `{  
						"status":{  
						   "1":1,
						   "2":2,
						   "3":0,
						   "4":0,
						   "6":0,
						   "8":0,
						   "9":0,
						   "10":0,
						   "11":0,
						   "13":0,
						   "14":0,
						   "15":0,
						   "16":0,
						   "17":1,
						   "19":0,
						   "20":0,
						   "21":0,
						   "22":4,
						   "23":4652,
						   "24":0,
						   "26":0,
						   "27":0,
						   "28":86,
						   "29":"",
						   "30":"GP25141633",
						   "31":0,
						   "32":0,
						   "33":0,
						   "34":3815,
						   "35":4128,
						   "36":0,
						   "37":14,
						   "38":0,
						   "39":14,
						   "40":"%12%0A%11%17%06%01",
						   "41":0,
						   "42":0,
						   "43":0,
						   "44":0,
						   "45":0,
						   "46":1,
						   "47":1,
						   "48":1,
						   "49":0,
						   "54":25390253,
						   "55":1,
						   "56":4,
						   "57":92372,
						   "58":0,
						   "59":0,
						   "60":500,
						   "61":2,
						   "62":0,
						   "63":0,
						   "64":0,
						   "65":0,
						   "66":0,
						   "67":0,
						   "68":0,
						   "69":1,
						   "70":67,
						   "71":12,
						   "72":18,
						   "73":13,
						   "74":0
						},
						"settings":{  
						   "1":0,
						   "2":9,
						   "3":6,
						   "4":3,
						   "5":0,
						   "6":1,
						   "7":1,
						   "8":1,
						   "9":0,
						   "10":1,
						   "11":0,
						   "12":0,
						   "13":1,
						   "14":0,
						   "15":4,
						   "16":0,
						   "17":0,
						   "18":4,
						   "19":5,
						   "20":0,
						   "21":0,
						   "22":0,
						   "23":0,
						   "24":4,
						   "25":0,
						   "26":4,
						   "27":0,
						   "28":0,
						   "29":5,
						   "30":0,
						   "31":5,
						   "32":30,
						   "33":0,
						   "34":0,
						   "35":0,
						   "36":0,
						   "37":0,
						   "38":0,
						   "39":4,
						   "40":0,
						   "41":13,
						   "42":8,
						   "43":0,
						   "44":8,
						   "45":8,
						   "46":0,
						   "47":0,
						   "48":0,
						   "50":0,
						   "51":1,
						   "52":0,
						   "54":1,
						   "57":1,
						   "58":1,
						   "59":4,
						   "60":8,
						   "61":1,
						   "62":2500000,
						   "63":7,
						   "64":4,
						   "65":0,
						   "66":0,
						   "67":0,
						   "68":0,
						   "69":1,
						   "70":1,
						   "71":0,
						   "72":1,
						   "73":0,
						   "74":0,
						   "75":3,
						   "76":1,
						   "77":0,
						   "78":1,
						   "79":0,
						   "80":1,
						   "81":3,
						   "82":0,
						   "83":1,
						   "84":0,
						   "85":2,
						   "86":1,
						   "87":0,
						   "88":80,
						   "89":12,
						   "91":2,
						   "92":12,
						   "93":0,
						   "94":0,
						   "95":1,
						   "96":0,
						   "97":0,
						   "98":0,
						   "99":0
						}
					 }`,
				},

				// HERO 4 {"status":{"1":1,"2":2,"3":0,"4":0,"6":0,"8":0,"9":0,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"17":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"28":2,"29":"","30":"KonradHERO4Black","31":0,"32":0,"33":0,"34":4778,"35":7523,"36":432,"37":114,"38":5298,"39":114,"40":"%10%08%13%17%13%01","41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"54":31798784,"55":1,"56":4,"57":932443,"58":0,"59":0,"60":500,"61":2,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"settings":{"1":0,"2":9,"3":8,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":4,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":7,"23":0,"24":0,"25":0,"26":4,"27":0,"28":0,"29":5,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":4,"49":0,"50":1,"51":1,"52":0,"53":0,"54":1,"55":2,"56":0,"57":0,"58":1,"59":1,"60":8,"61":1,"62":700000,"63":1,"64":1,"68":0,"69":0,"70":0,"72":1,"73":0,"74":1,"75":2,"76":3,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0}}
			},

			wantStatus: CurrentStatus{
				WiFiSSID: "GP25141633",
			},
			wantHTTPStatus: 200,
			wantErr:        nil,
			// wantErr: errors.New("got false response"),
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			hero := CreateTestRestClient(tt.fields.myDoer)
			gotStatus, gotHTTPStatus, err := hero.GetCameraStatus()

			if err == nil {
				assert.NotNil(t, gotStatus)
				assert.Equal(t, tt.wantHTTPStatus, gotHTTPStatus, "WiFiSSID did not match")
				assert.Equal(t, tt.wantStatus.WiFiSSID, gotStatus.WiFiSSID, "WiFiSSID did not match")
			}

			assert.Equal(t, err, tt.wantErr, "Unexpected error")

		})
	}
}
